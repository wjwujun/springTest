<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--aop切面,配置开发*********************************************************************************************************-->
    <!--
               Joinpoint(连接点)：
                       -   类里面可以被增强的方法，这些方法称为接入点
               Pointcut(切入点)：
                       -   指我们要对哪些Joinpoint进行拦截的定义
                       -   实际增强的方法叫做切入点
               Advice(通知/增强)：
                       -   增强的逻辑，称为增强，比如扩展日志功能，这个日志功能称为增强
                       -   拦截到Joinpoint之后要做的事情，通知分为：
                           前置通知:方法之前
                           后置通知:方法之后
                           异常通知:方法异常
                           最终通知:在后置之后执行
                           环绕通知：方法之前和之后执行
               Aspect(切面)：
                       -   把增强应用到具体方法上面，过程称为切面
                       -   切入点和通知的结合
               introduction(引入)：
                       -  一种特殊的通知在不修改类代码的前提下，可以在运行期间为类动态的添加一些方法和field
               target(目标对象)：
                       -    代理的目标对象(要增强的类)
               weave（织入）
                       -    一个类被AOP织入增强以后，产生的一个结果代理类
           -->

        <!--配置对象-->
        <bean id="book" class="com.hello.aop.Book"></bean>
        <bean id="myBook" class="com.hello.aop.MyBook"></bean>



        <!--配置aop操作-->
       <!-- <aop:config>
            &lt;!&ndash;配置切入点
            id  给切入点起个名字&ndash;&gt;
            <aop:pointcut id="poin" expression="execution(* com.hello.aop.Book.*(..))"></aop:pointcut>

            &lt;!&ndash;配置切面
            把增强用到方法上面&ndash;&gt;
            <aop:aspect ref="myBook">
                &lt;!&ndash;配置增强的类型，前置，后置，最终
                method:增强类中哪个方法作为前置增强
                before:前置
                after：后置
                aroud:环绕通知&ndash;&gt;
                <aop:before method="before1" pointcut-ref="poin"></aop:before>
                <aop:after method="after1" pointcut-ref="poin"></aop:after>
                <aop:around method="around1" pointcut-ref="poin"></aop:around>

            </aop:aspect>
        </aop:config>
-->

    <!--aop切面，注解开发*********************************************************************************************************-->

    <!--开启aop操作-->
    <aop:aspectj-autoproxy></aop:aspectj-autoproxy>

    <bean id="myBook1" class="com.hello.aop.MyBook1"></bean>

</beans>